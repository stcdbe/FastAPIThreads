[tool.poetry]
name = "fastapithreads"
version = "0.2.0"
description = ""
authors = ["stcdbe <samthomascolddeadblueeyes@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.109.0"
pydantic-settings = "^2.1.0"
uvicorn = "^0.27.0.post1"
email-validator = "^2.1.0.post1"
pyjwt = "^2.8.0"
bcrypt = "^4.1.2"
gunicorn = "^21.2.0"
python-multipart = "^0.0.6"
motor = "^3.4.0"


[tool.poetry.group.dev.dependencies]
pytest-asyncio = "^0.23.4"
httpx = "^0.26.0"
mypy = "^1.9.0"


[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D106", # Missing docstring in public nested class
    "D107", # Missing docstring in __init__
    "ERA001", # Found commented-out code
    "SIM108", # Use ternary operator {contents} instead of if-else-block
    "ANN101", # Missing type annotation for {name} in method
    "ANN102", # Missing type annotation for {name} in classmethod
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed in {name}
    "S101", # Use of assert detected
    "N802", # Function name {name} should be lowercase
    "FBT001", # Boolean-typed positional argument in function definition
    "FBT002", # Boolean default positional argument in function definition
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
